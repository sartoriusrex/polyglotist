version: "3.8"
services:
    polyglotist_app_dev:
        container_name: "app_dev"
        build:
            context: .
            dockerfile: Dockerfile.dev
        ports:
            - "8080:8080"
            - "3000:3000"
        links:
            - database #links database to app
        volumes:
            - .:/app # mount src folder from host machine to app folder in docker container to reflect local changes for dev server___
            - node_modules:/app/node_modules # to access puppeteer
            - $GOOGLE_APPLICATION_CREDENTIALS:/tmp/keys/gcred.json:ro # for GOOGLE CLOUD SERVICES -- TRANSLATION
        environment:
            DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@database:5432/api
            DB_HOST: database
            GOOGLE_APPLICATION_CREDENTIALS: /tmp/keys/gcred.json # Set application credentials
            K_SERVICE: dev
            K_REVISION: dev-00001
        cap_add:
            - SYS_ADMIN # For puppeteer to have sys-admin access
    database:
        image: "postgres:12" #just pull image from docker hub
        container_name: "postgres-12"
        restart: unless-stopped
        ports:
            - "5432:5432"
        environment:
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_USER: ${DB_USER}
            POSTGRES_DB: ${DB_DATABASE}

volumes:
    node_modules:

# to execuse docker-compose, execute sudo docker-compose -f docker/docker-compose.yml up
# -f specifies the path to the docker-compose from root project folder where command should be executed        